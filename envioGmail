from distutils.log import error
from lib2to3.pgen2 import driver
from pydoc import cli
from itsdangerous import json
from  selenium import webdriver
from time import sleep
import boto3
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.action_chains import ActionChains 
from selenium.webdriver.common.keys import Keys 
from boto3.s3.transfer import S3Transfer


options = webdriver.ChromeOptions()

#S3
parametersS3 = {
'access_key': '',
'access_secret': '',
'bucket_name': ''

}


# Parametros que serão necessários
parameters = {
    'EMAIL': '',
    'SENHA': '',
    'TITULO': 'TESTE DE E-MAIL',
    'DESTINATARIO': 'thales.dartech@gmail.com',
    'COPIA': '',
    'DESCRICAO': 'Apenas um teste do projeto de enviar e-mail via gmail para um projeto',
    'HEADLESS': False
}

if (parameters['HEADLESS']) == True:
      options.add_argument("--headless")

# FUNÇÃO PRINCIPAL
def main():
        driver = webdriver.Chrome(executable_path=r'./chromedriver.exe', options=options) # Diretório do driver
        link = 'https://www.google.com/gmail/' # Link do site
        driver.get(link)
        driver.maximize_window()  # Maximizando a tela
        

        loginGmail(driver)
        enviarEmail(driver)
        lerEmail(driver)
        enviaS3(driver)

# LOGIN NO GMAIL
def loginGmail(driver):
        try:
            driver.implicitly_wait(10)
            driver.find_element_by_css_selector('#identifierId').send_keys(parameters['EMAIL']) # PREENCHENDO O E-MAIL
            driver.find_element_by_css_selector('#identifierNext').click() # BOTÃO DE PROXIMO
            sleep(2)
            driver.find_element_by_css_selector('#password > div.aCsJod.oJeWuf > div > div.Xb9hP > input').send_keys(parameters['SENHA']) # PREENCHENDO A SENHA
            driver.find_element_by_css_selector('#passwordNext').click() # BOTAO DE PROXIMO
            try:
                driver.find_element_by_css_selector('#yDmH0d > c-wiz.yip5uc.SSPGKf > c-wiz > div > div.p9lFnc > div > div > div > div.ZRg0lb.Kn8Efe > div:nth-child(3) > div > div.yKBrKe > div > span > span').click() # CASO TENHA AUTH VAI PROSSEGUIR
            except:
                pass
        except Exception as e: 
            print(e)
            

# ENVIA UM E-MAIL
def enviarEmail(driver):
    try:
        # ENVIANDO O E-MAIL
        sleep(2)
        driver.execute_script('document.getElementsByClassName("T-I T-I-KE L3")[0].click()') # CLICA NO BOTÃO DE NOVO E-MAILS
        sleep(2)
        driver.find_element_by_css_selector(".oj div textarea").send_keys(parameters['DESTINATARIO']) # PREENCHE O DESTINATARIO DO EMAIL
        driver.find_element_by_css_selector(".aoD.az6 input").send_keys(parameters['TITULO']) # PREENCHE O TITULO DO EMAIL
        driver.find_element_by_css_selector(".Ar.Au div").send_keys(parameters['DESCRICAO']) # PREENCHE A DESCRICAO DO EMAIL
        #driver.find_element_by_css_selector('.T-I.J-J5-Ji.aoO.v7.T-I-atl.L3').click() # FAZ O ENVIO DO E-MAIL

    except Exception as e: 
        print(e)
        pass

# LÊ A RESPOSTA DO E-MAIL QUE FOI ENVIADO
def lerEmail(driver):
    try:
        driver.implicitly_wait(10)
        email = driver.find_elements_by_css_selector('.zA.yO')
        for c in range(0,len(email)):
            if parameters['TITULO'] in email[c].text:
                resposta = email[c].text
                return resposta
    except Exception as e: 
        print(e)

# PEGA A RESPOSTA DO E-MAIL QUE FOI ENVIADO, COLOCA EM UM JSON E SOBE NO S3
def enviaS3(driver):
    try:
        f = open("temp.json", "w+")
        json = '{\n"retorno":'+'"'+lerEmail(driver).replace(",",'').replace("\n","")+'"''\n}'
        f.write(json)
        f.close()
        id = 'enviaGmail.json'
        transfer = S3Transfer(boto3.client('s3', aws_access_key_id = parametersS3['access_key'], aws_secret_access_key = parametersS3['access_secret']))
        transfer.upload_file("temp.json", parametersS3['bucket_name'], id)
    except Exception as e: 
        print(e)


# RODA A FUNÇÃO PRINCIPAL
if __name__ == '__main__':
    main()
